テスト用

あああ
いいい
ううう
えええ
おおお

てすと
かかか
ききき

■C#
指定したパスの画像ファイルをバイト型で取得し、DataSet項目へセットする方法
string imgFilePath = @"c:\work\hogehoge.png";
System.Drawing.Image img = System.Drawing.Image.FromFile(imgFilePath);
ImageConverter imgcv = new ImageConverter();
dt.Rows[0]["Image_Path"] = (byte[])imgcv.ConvertTo(img, typeof(byte[]));




==============================================================================
# 出力の後に改行を入れる
function add_line {
  if [[ -z "${PS1_NEWLINE_LOGIN}" ]]; then
    PS1_NEWLINE_LOGIN=true
  else
    printf '\n'
  fi
}

PROMPT_COMMAND='add_line; echo -ne "\033]0;${USER}:${PWD/#$HOME/~}\007"'

export LANG=ja_JP.utf8
export PS1="\e[0;32;1m\][\u@\D{%y/%m/%d %H:%M:%S}]\$(__git_ps1)\n\e[1;34m\][\w]\n\e[00m\]\$"




#
# git-completion.bash / git-prompt.sh
#
if [ -f ./git_tool/git-completion.bash ]; then
    source ./git_tool/git-completion.bash
fi
if [ -f ./git_tool/git-prompt.sh ]; then
    source ./git_tool/git-prompt.sh
fi

GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWSTASHSTATE=true
GIT_PS1_SHOWUPSTREAM=auto


------------------------------------------------------------------
チュートリアル: コマンドラインでの C プログラムのコンパイル | Microsoft Docs
https://docs.microsoft.com/ja-jp/cpp/build/walkthrough-compile-a-c-program-on-the-command-line?view=vs-2019
------------------------------------------------------------------

------------------------------------------------------------------
【VSCode】デバッグ機能を使ってC/C++のデバッグをする 
https://mattyan1053.hatenablog.com/entry/2018/12/08/155228
------------------------------------------------------------------

void((function(undefined) {
    alert("test");
}))


// ブックマークレット(jQuery使用)
void((function(f) {
    // <script>タグを生成
    var script = document.createElement('script');

    // cdnjs(https://cdnjs.com) から jQuery 2.2.1 を読み込む
    // プロトコルは省略してドメイン相対パスで
    script.src = '//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.1/jquery.min.js';

    // jQuery の読み込みが完了してから本体の処理が実行されるように
    // onload イベントを設定
    script.onload = function() {
        var $ = jQuery.noConflict(true);

        // $を渡しつつ本体の処理を実行
        f($);
    };

    document.body.appendChild(script);

})(function($, undefined) {
    // バージョン確認
    ;;; console.log('jQuery: ', $().jQuery);

    // let holidayDates = ['2020/08/10','2020/08/11','2020/09/21','2020/09/22','2020/11/03','2020/11/23'];
    let dt = new Date();
    let month, date, next = '';

    dt.setDate(dt.getDate() + 3);

    dateT = ["日","月","火","水","木","金","土"];
    let day = dateT[dt.getDay()];

    if (day == '土') dt.setDate(dt.getDate() + 1);
    if (day == '日') dt.setDate(dt.getDate() + 1);

    // 定休日・祝日であれば日付を＋１(未完成)
    /*
    holidayDates.sort();
    for (let i = 0; holidayDates[i]; i++) {
        let dateObj = new Date(holidayDates[i]);
        let diff = dt.getTime() - dateObj.getTime();
        if (Math.floor(diff) == 0) dt.setDate(dt.getDate() + 1);
    }
    */

    month = dt.getMonth() + 1;
    date = dt.getDate();
    day = dateT[dt.getDay()];

    let dispMonth = month + '';
    if (dispMonth.length === 1 ) dispMonth = '0' + dispMonth;
    let dispdate = date + '';
    if (dispdate.length === 1 ) dispdate = '0' + dispdate;

    next = dispMonth + dispdate;

    let li_first = $(".widget-antennaList-title:first").text();

    alert('Next ' + next + '(' + day + ')' + ' ' + li_first);
}));

====================================================================================:w

Peacock Settigs
    {
        "name": "Local",
        "value": "#01042583"

    }


test


■2020/10/28
const CreateTitle = () => {

    const holidayDates = ['2020/8/10','2020/8/11','2020/9/21','2020/9/22','2020/11/3','2020/11/23'];
    let dt = new Date();
    let month, date, next = '';
    let day;
    let dateT = ['日','月','火','水','木','金','土'];
    let businessDay = 3;

    let workHoliday = '';

    // ※「Day」は曜日が入っている
    dt.setDate(dt.getDate() + 1);

    // ※「businessDay」→ 営業日(現在は１NextCは基本３営業日)
    for (let i = 0; i < businessDay; i++) {

        day = dateT[dt.getDay()];

        // ３営業日後が休日であれば、日付を＋１
        if (day === '土') dt.setDate(dt.getDate() + 1);

        if (day === '日') dt.setDate(dt.getDate() + 1);

        for (let holiday of holidayDates) {
            workHoliday += holiday + ',';

            // if (holiday == ConvDateToStr(dt)) {
            //     dt.setDate(dt.getDate() + 1);
            // }
        }

        dt.setDate(dt.getDate() + 1);
    }

    // workHoliday += ConvDateToStr(dt);

    // ３営業日後の日付を取得
    month = dt.getMonth() + 1;
    date = dt.getDate();
    day = dateT[dt.getDay()];
    next = countNum(month) + countNum(date);

    var li_first;
    li_first = $('.widget-antennaList-title:first').text();

    return 'Next ' + next + '(' + day + ')' + '\n' + li_first + '\n' + workHoliday;
};

// 日付から文字列に変換する関数
const ConvDateToStr = (varDate) => {

    var year_str = varDate.getFullYear();
    //月だけ+1すること
    var month_str = varDate.getMonth() + 1;
    var day_str = varDate.getDate();
    format_str = 'YYYY/MM/DD';

    format_str = format_str.replace(/YYYY/g, year_str);
    format_str = format_str.replace(/MM/g, month_str);
    format_str = format_str.replace(/DD/g, day_str);

    return format_str;

};


new
const CreateTitle = () => {

    const holidayDates = ['2020/08/10','2020/08/11','2020/09/21','2020/09/22','2020/10/29','2020/11/03','2020/11/23'];
    let dt = new Date();
    let month, date, next = '', day;
    let dateT = ['日','月','火','水','木','金','土'];
    let businessDayCount = 3;
    let holidayCount = 0;
    let dayCounter = 0;
    let workHoliday = '';


    // ※ 「Day」は曜日が入っている
    dt.setDate(dt.getDate() + 1);

    // ※ 「businessDay」→  営業日(現在は１NextCは基本３営業日)
    for (let i = 0; i < businessDayCount; i++) {

        // 曜日取得
        day = dateT[dt.getDay()];

        // ３営業日後が休日であれば、日付を＋１
        if (day === '土') dt.setDate(dt.getDate() + 1);

        if (day === '日') dt.setDate(dt.getDate() + 1);

        for (let holiday of holidayDates) {
            if (holiday === ConvDateToStr(dt)) {
                dt.setDate(dt.getDate() + 1);
            }
        }

        dt.setDate(dt.getDate() + 1);
    }

    // workHoliday = ConvDateToStr(dt);
    // alert(workHoliday);

    //# ３営業日後の日付を取得
    month = dt.getMonth() + 1;
    date = dt.getDate();
    day = dateT[dt.getDay()];
    next = countNum(month) + countNum(date);





====================================================
const CreateTitle = () => {

    // 祝日設定
    const holidayDates = ['2020/8/10','2020/8/11','2020/9/21','2020/9/22','2020/11/3','2020/11/23'];

    let dt = new Date();
    let month, date, next = '';
    let day;
    let dateT = ['日','月','火','水','木','金','土'];
    let businessDayCount = 3;
    let workHoliday = '';

    // ※「Day」は曜日が入っている
    dt.setDate(dt.getDate() + 1);

    // ※「businessDayCount」→ 営業日数(現在は１NextCは基本３営業日)
    // 今日＋１の日付を指定した営業日数分、１日づつ増やしながら休日チェック、土日なら＋１日
    for (let i = 0; i < businessDayCount; i++) {

        // 営業日が休日であれば、日付を＋１
        if (dateT[dt.getDay()] === '土') {
            dt.setDate(dt.getDate() + 1);
        }

        if (dateT[dt.getDay()] === '日') {
            dt.setDate(dt.getDate() + 1);
        }

        // 祝日チェック、祝日なら＋１日
        for (let holiday of holidayDates) {
            if (holiday === ConvDateToStr(dt)) {
                dt.setDate(dt.getDate() + 1);
            }
        }

        dt.setDate(dt.getDate() + 1);
    }

    // NextC当日の祝日チェック
    for (let holiday of holidayDates) {
        if (holiday === ConvDateToStr(dt)) {
            dt.setDate(dt.getDate() + 1);
        }
    }

    alert('NextC:' + ConvDateToStr(dt));

    // 指定した営業日後のNextCを取得して整形
    month = dt.getMonth() + 1;
    date = dt.getDate();
    day = dateT[dt.getDay()];
    next = countNum(month) + countNum(date);

    let li_first;
    li_first = $('.widget-antennaList-title:first').text();

    return 'Next ' + next + '(' + day + '曜日)' + '\n' + li_first + '\n' + workHoliday;
};

// 日付から文字列に変換する関数
const ConvDateToStr = (varDate) => {

    let year_str = varDate.getFullYear();
    let month_str = varDate.getMonth() + 1;
    let day_str = varDate.getDate();
    let format_str = 'YYYY/MM/DD';

    format_str = format_str.replace(/YYYY/g, year_str);
    format_str = format_str.replace(/MM/g, month_str);
    format_str = format_str.replace(/DD/g, day_str);

    return format_str;
};


